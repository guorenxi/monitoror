// Code generated by mockery v2.46.2. DO NOT EDIT.

package mocks

import (
	models "github.com/monitoror/monitoror/models"
	mock "github.com/stretchr/testify/mock"

	router "github.com/monitoror/monitoror/service/router"
)

// MonitorableRouter is an autogenerated mock type for the MonitorableRouter type
type MonitorableRouter struct {
	mock.Mock
}

// Group provides a mock function with given fields: path, variantName
func (_m *MonitorableRouter) Group(path string, variantName models.VariantName) router.MonitorableRouterGroup {
	ret := _m.Called(path, variantName)

	if len(ret) == 0 {
		panic("no return value specified for Group")
	}

	var r0 router.MonitorableRouterGroup
	if rf, ok := ret.Get(0).(func(string, models.VariantName) router.MonitorableRouterGroup); ok {
		r0 = rf(path, variantName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(router.MonitorableRouterGroup)
		}
	}

	return r0
}

// NewMonitorableRouter creates a new instance of MonitorableRouter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMonitorableRouter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MonitorableRouter {
	mock := &MonitorableRouter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
