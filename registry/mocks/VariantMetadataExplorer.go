// Code generated by mockery v2.46.2. DO NOT EDIT.

package mocks

import (
	params "github.com/monitoror/monitoror/internal/pkg/monitorable/params"
	mock "github.com/stretchr/testify/mock"
)

// VariantMetadataExplorer is an autogenerated mock type for the VariantMetadataExplorer type
type VariantMetadataExplorer struct {
	mock.Mock
}

// GetValidator provides a mock function with given fields:
func (_m *VariantMetadataExplorer) GetValidator() params.Validator {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetValidator")
	}

	var r0 params.Validator
	if rf, ok := ret.Get(0).(func() params.Validator); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(params.Validator)
		}
	}

	return r0
}

// IsEnabled provides a mock function with given fields:
func (_m *VariantMetadataExplorer) IsEnabled() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IsEnabled")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewVariantMetadataExplorer creates a new instance of VariantMetadataExplorer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVariantMetadataExplorer(t interface {
	mock.TestingT
	Cleanup(func())
}) *VariantMetadataExplorer {
	mock := &VariantMetadataExplorer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
